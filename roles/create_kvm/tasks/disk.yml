---
- name: Resize disk
  # NOTE that this can only increase the size of the disk; the API does not allow shrinkage.
  community.general.proxmox_disk:
    disk: "{{ item.disk }}"
    name: "{{ pve_name }}"
    size: "{{ item.size }}G"
    vmid: "{{ kvm_created.vmid }}"
    state: resized
  loop: "{{ pve_disks | default([]) }}"
  loop_control:
    label: "{{ item.disk }}"
  when: (item.disk in kvm_config) and ("size" in item) and (item.get("media") != "cdrom")

- name: Create or configure disk
  community.general.proxmox_disk:
    aio: "{{ item.aio | default(omit) }}"
    backup: "{{ item.backup | default(omit) }}"
    bps_max_length: "{{ item.bps_max_length | default(omit) }}"
    bps_rd_max_length: "{{ item.bps_rd_max_length | default(omit) }}"
    bps_wr_max_length: "{{ item.bps_wr_max_length | default(omit) }}"
    bwlimit: "{{ item.bwlimit | default(omit) }}"
    cache: "{{ item.cache | default(omit) }}"
    create: "{{ 'disabled' if item.disk in kvm_config else item.get('create', 'regular') }}"
    cyls: "{{ item.cyls | default(omit) }}"
    detect_zeroes: "{{ item.detect_zeroes | default(omit) }}"
    discard: "{{ item.discard | default(omit) }}"
    disk: "{{ item.disk }}"
    format: "{{ item.format | default(omit) }}"
    heads: "{{ item.heads | default(omit) }}"
    import_from: "{{ item.import_from | default(omit) }}"
    iops_max_length: "{{ item.iops_max_length | default(omit) }}"
    iops_max: "{{ item.iops_max | default(omit) }}"
    iops_rd_max_length: "{{ item.iops_rd_max_length | default(omit) }}"
    iops_rd_max: "{{ item.iops_rd_max | default(omit) }}"
    iops_rd: "{{ item.iops_rd | default(omit) }}"
    iops_wr_max_length: "{{ item.iops_wr_max_length | default(omit) }}"
    iops_wr_max: "{{ item.iops_wr_max | default(omit) }}"
    iops_wr: "{{ item.iops_wr | default(omit) }}"
    iops: "{{ item.iops | default(omit) }}"
    iothread: "{{ item.iothread | default(omit) }}"
    mbps_max: "{{ item.mbps_max | default(omit) }}"
    mbps_rd_max: "{{ item.mbps_rd_max | default(omit) }}"
    mbps_rd: "{{ item.mbps_rd | default(omit) }}"
    mbps_wr_max: "{{ item.mbps_wr_max | default(omit) }}"
    mbps_wr: "{{ item.mbps_wr | default(omit) }}"
    mbps: "{{ item.mbps | default(omit) }}"
    media: "{{ item.media | default(omit) }}"
    name: "{{ pve_name }}"
    queues: "{{ item.queues | default(omit) }}"
    replicate: "{{ item.replicate | default(omit) }}"
    rerror: "{{ item.rerror | default(omit) }}"
    ro: "{{ item.ro | default(omit) }}"
    scsiblock: "{{ item.scsiblock | default(omit) }}"
    serial: "{{ item.serial | default(omit) }}"
    shared: "{{ item.shared | default(omit) }}"
    size: "{{ item.size | default(omit) }}"
    snapshot: "{{ item.snapshot | default(omit) }}"
    ssd: "{{ item.ssd | default(omit) }}"
    storage: "{{ item.storage | default(pve_storage) }}"
    timeout: "{{ item.timeout | default(omit) }}"
    trans: "{{ item.trans | default(omit) }}"
    vmid: "{{ kvm_created.vmid }}"
    werror: "{{ item.werror | default(omit) }}"
    wwn: "{{ item.wwn | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ pve_disks | default([]) }}"
  loop_control:
    label: "{{ item.disk }}"
  when: ("state" in item) # require state param otherwise have to fully spec the disks
